apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: nano
  ananananana
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - env:
            - name: NODE_ENV
              value: development
          image: {imageTag}
          imagePullPolicy: Always
          name: nginx
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 256Mi
            limits:
              cpu: 300m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /ready
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 1
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /live
              port: 9000
            initialDelaySeconds: 10
            # Allow sufficient amount of time (180 seconds = periodSeconds * failureThreshold)
            # for the registered shutdown handlers to run to completion.
            periodSeconds: 30
            failureThreshold: 3
            successThreshold: 1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: nginx
  namespace: default
spec:
  maxReplicas: 5
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx
  targetCPUUtilizationPercentage: 80
